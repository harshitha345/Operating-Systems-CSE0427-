#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t semaphore;

int shared_data = 5;

void *thread1(void *arg) {
    int local_data;
    sem_wait(&semaphore);
    local_data = shared_data;
    printf("Thread 1: Read %d from shared memory.\n", local_data);
    local_data *= 2;
    printf("Thread 1: Doubled value = %d.\n", local_data);
    sem_post(&semaphore);
}

void *thread2(void *arg) {
    int local_data;
    sem_wait(&semaphore);
    local_data = shared_data;
    printf("Thread 2: Read %d from shared memory.\n", local_data);
    local_data *= 5;
    printf("Thread 2: Five times value = %d.\n", local_data);
    sem_post(&semaphore);
}

int main() {
    pthread_t tid1, tid2; // create thread 1
    if (pthread_create(&tid1, NULL, thread1, NULL) != 0) {
        printf("Error creating thread 1.\n");
        return 1;
    }

    // create thread 2
    if (pthread_create(&tid2, NULL, thread2, NULL) != 0) {
        printf("Error creating thread 2.\n");
        return 1;
    }

    // wait for both threads to finish
    pthread_join(tid1, NULL);
    pthread_join(tid2, NULL);

    sem_destroy(&semaphore);

    return 0;

