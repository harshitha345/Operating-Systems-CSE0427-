#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
int main(){
	pid_t pid[4];
	int i,j;
	for (i=0;i<4;i++){
		pid[i]=fork();
		if(pid[i])<0{
		print("error:failed to create child processes/n");
		exit(1);
	}	
	else if (pid[i]==0])
	switch(i){
		case 0:
			print("child processes %d(odd numbers:)",getpid());
			for (j=1;j<=10;j++){
				if(j%2!=0)
				print("%d",j);
			}
			print("/n");
			break;
			case1:
				print("child processes %d(even numbers:)",getpid());
				for(j=1;j<10;j++){
					if(j%2==0)
					print("%d",j);
				}
				print("/n");
				break;
				case2:
					print(["child processes %d(multiples of 3):",getpid());
					for(j=1;j<10;j++){
						if(j%3==0)
						print("%d",j);
					}
					print("/n");
					break;
					case3:
						print(["child processes %d(multiples of 5):",getpaid());
						for(j=1;j<10;j++){
							if(j%5==0)
							print("%d",j);
						}
						print("/n")
						break;
					}
					exit(0);
				}
			}
			for(i=0,i<4;i++){
				waitpid(pid[i],null,0);
			}
			return 0;
		}