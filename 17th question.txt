#include<stdio.h>

#define MAX_PROCESS 3

int main() {
    int burst_time[MAX_PROCESS] = {24, 3, 3};
    int remaining_time[MAX_PROCESS], arrival_time[MAX_PROCESS];
    int waiting_time[MAX_PROCESS] = {0}, turnaround_time[MAX_PROCESS] = {0};
    int quantum_time = 4, total_time = 0;
    int completed_process = 0;
    
    // initialize remaining time with burst time and arrival time with zero
    for(int i=0; i<MAX_PROCESS; i++) {
        remaining_time[i] = burst_time[i];
        arrival_time[i] = 0;
    }
    
    while(completed_process < MAX_PROCESS) {
        int flag = 0;
        
        for(int i=0; i<MAX_PROCESS; i++) {
            if(remaining_time[i] > 0) {
                flag = 1;
                
                if(remaining_time[i] > quantum_time) {
                    total_time += quantum_time;
                    remaining_time[i] -= quantum_time;
                }
                else {
                    total_time += remaining_time[i];
                    waiting_time[i] = total_time - burst_time[i];
                    remaining_time[i] = 0;
                    completed_process++;
                    turnaround_time[i] = total_time;
                }
            }
        }
   
        // if there is no pending process, increase the time
        if(flag == 0) {
            total_time++;
        }
    }
    
    // calculate the average waiting time and average turnaround time
    float avg_waiting_time = 0, avg_turnaround_time = 0;
    for(int i=0; i<MAX_PROCESS; i++) {
        avg_waiting_time += waiting_time[i];
        avg_turnaround_time += turnaround_time[i];
    }
    avg_waiting_time /= MAX_PROCESS;
    avg_turnaround_time /= MAX_PROCESS;
    
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for(int i=0; i<MAX_PROCESS; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\n", i+1, burst_time[i], waiting_time[i], turnaround_time[i]);
    }
    printf("Average Waiting Time = %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time = %.2f\n", avg_turnaround_time);
    
    return 0;
}
